:where(.live-demo) {
	position: relative;
	--padding: 1.5rem;
	--division: 50;
}

.live-demo {
	--_height: var(--height, 100vh);

	height: var(--_height);
	box-sizing: border-box;

	&[data-editors="1"] { --editors: 1; }
	&[data-editors="2"] { --editors: 2; }
	&[data-editors="3"] { --editors: 3; }

	.demo-target {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-flow: column;
	}

	.demo-controls {
		&:where(.live-demo.minimal *) {
			display: none;
		}

		&:where(.live-demo:not(.minimal) *) {
			grid-area: controls;
			z-index: 1;
			display: flex;
			flex-wrap: wrap;
			padding: .3em;
			font-size: 60%;
			line-height: 1.5;

			&:empty {
				display: none;
			}

			h1 {
				margin: 0;
				margin-right: .5em;
				font-size: 150%;
				line-height: 1;
				font-weight: bold;
				letter-spacing: -.02em;
			}

			form {
				display: contents;
			}

			details.notes {
				font-size: 100%;
			}

			details.notes > summary,
			.button,
			button {
				all: unset;
				display: flex;
				justify-content: center;
				align-items: center;
				padding: .1em .4em;
				margin: 0 .2em;
				box-shadow: 0 0 1px inset;
				border-radius: .2em;
				cursor: pointer;
				font-weight: bold;
				white-space: nowrap;

				&:disabled,
				&:not(:hover):not(:focus) {
					opacity: .6;
				}

				&:disabled {
					cursor: not-allowed;
					filter: grayscale(100%);
				}

				/* Prevent jumping around when the Play button becomes Pause */
				&.replay {
					min-width: 7.5ch;
				}
			}
		}

		&:where(.live-demo.horizontal *) {
			padding: .3em .6em;
		}
	}

	.editor-container {
		display: flex;
		flex-flow: column;
		max-width: 100vw;

		div.prism-live {
			--min-height: 1.6em;

			&:not(.collapsed) {
				flex: auto;
			}
		}
	}

	&:not(.minimal) {
		padding: 0;
		display: grid;
		align-items: stretch;

		&.horizontal {
			grid-template: "controls" auto
						   "target"   minmax(0, 1fr)
						   "editor"   auto / 1fr;
		}

		&:not(.horizontal) {
			 /* if it breaks, use 1.5em as height of first row */
			--fr: calc(2fr * var(--division, 50) / 100);
			grid-template: "editor controls" auto
						   "editor target" minmax(0, 1fr) / calc(100% * var(--division, 50) / 100) minmax(0, 1fr);
		}

		.demo-target {
			grid-area: target;
		}

		.editor-container {
			grid-area: editor;
		}

		&.horizontal {
			> div.editor-container:first-child,
			> style:first-child + div.editor-container {
				margin-top: auto;
			}
		}

		&:not(.horizontal) {
			div.editor-container {
				width: 100%;
				/* min-width: 15em; */
			}
		}

		&.isolated {
			> iframe {
				justify-self: stretch;
				border-radius: 8px;
				background: hsl(0 0% 100% / .8);
			}

				&.horizontal {
					> iframe {
						border-bottom-left-radius: 0;
						border-bottom-right-radius: 0;
						margin: 0 .5em;
					}
				}

				&:not(.horizontal) {
					padding-right: var(--padding);

					> iframe {
						margin-bottom: var(--padding);
						border-bottom-left-radius: 0;
						border-top-left-radius: 0;
					}
				}
		}

		div.prism-live {
			color: inherit;
			font-size: calc(var(--font-size-multiplier, 1) * 100%);
			line-height: 1.5em;
			max-height: var(--_height);
			max-height: -webkit-fill-available;
			transition: .2s;
			transition-property: max-height, flex;

			&.collapsed {
				min-height: var(--collapsed-height, var(--min-height));

				overflow: hidden;
				flex: none;

				pre {
					opacity: .2;
				}

				textarea,
				pre {
					overflow: hidden;
				}
			}
		}
	}

	&.isolated {
		> iframe {
			border: 0;
			margin: 0;
			box-sizing: border-box;
			resize: both;
		}
	}

	&:not(.isolated, .minimal) {
		&.horizontal {
			.demo-target {
				padding: 0 1rem;
			}
		}

		&:not(.horizontal) {
			div.editor-container {
				margin-right: 1em;
			}
		}
	}

	&.horizontal:not(.minimal) {
		div.prism-live {
			&.collapsed {
				height: var(--collapsed-height, var(--min-height));
				min-height: var(--min-height);
			}
		}

		pre.prism-live {
			max-height: calc(var(--division, 50) * var(--_height, 100vh) / 100);
		}
	}

	/* Hack to fix overflowing height */
	&:not(.horizontal, .minimal) {
		div.prism-live {
			contain: size;

			&:not(.collapsed) {
				/* max-height: calc(var(--_height) - (var(--editors, 1) - 1) * var(--collapsed-height, var(--min-height))); */
			}
		}
	}

	textarea.prism-live {
		max-width: 100%;
		min-height: 1.6em;
	}

	pre.prism-live {
		height: 100%;
		line-height: 1.5em;
	}

	.prism-live label {
		position: absolute;
		top: .6rem;
		right: 1rem;
		z-index: 1;
		padding: .1rem .5rem;
		border-radius: .2em;
		background: var(--label-color, hsl(30, 100%, 50%));
		color: white;
		cursor: pointer;
		text-transform: uppercase;
		font: bold 1.2rem/1.5 var(--font-heading, var(--heading-font, Helvetica Neue, Segoe UI, sans-serif));
		opacity: .5;

		&:hover {
			background: var(--label-hover-color, hsl(15, 100%, 45%));
			opacity: 1;
		}
	}
}

.demo-controls {
	container-name: demo_controls;
	container-type: inline-size;
}